@page "/"
@implements IAsyncDisposable
@inject IJSRuntime jsRuntime

<PageTitle>Home</PageTitle>

<p>This is a .NET 9 Blazor Web App with Global Server Interactivity</p>

<p>We are initializing a global keypress handler in JavaScript, which calls our code whenever a key is pressed.</p>

<p>You can see the JavaScript code in App.razor</p>

<p>It works, but there is a problem here.</p>

<p>What is it?</p>

<p>Test it by pressing keys.</p>

<h3>@Message</h3>

@code 
{
    string Message { get; set; } = "";
    bool Loaded = false;
    DotNetObjectReference<Home> dotNetObjectReference;

    protected override async Task OnAfterRenderAsync (bool firstRender)
    {
        if (firstRender)
        {
            dotNetObjectReference = DotNetObjectReference.Create(this);
            await jsRuntime.InvokeVoidAsync("InitializeKeyboardHandler", dotNetObjectReference);
            Loaded = true;
        }
    }

    [JSInvokable]
    public async Task OnKeyDown(string key)
    {
        Message += key;
        await InvokeAsync(StateHasChanged);
    }

    public async ValueTask DisposeAsync()
    {
        if (Loaded) 
        {
            await jsRuntime.InvokeVoidAsync("RemoveKeyboardHandler");
            dotNetObjectReference.Dispose();
        }
    }
}
